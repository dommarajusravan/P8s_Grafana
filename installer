#! /bin/bash

kubectl apply -f common/namespace/namespace.yml

kubectl apply -f common/helm/service-account.yml
kubectl apply -f common/helm/role-binding.yml
#helm init --service-account tiller --wait

# Prometheus
cd prometheus
./installer

# Grafana
cd ./../grafana
./installer

#export POD_NAME=$(kubectl get pods --namespace monitoring-sravan -l "app=prometheus,component=server" -o jsonpath="{.items[0].metadata.name}")
#kubectl --namespace monitoring-sravan port-forward $POD_NAME 9090 2>&1 &

#export POD_NAME=$(kubectl get pods --namespace monitoring-sravan -l "app=grafana,release=grafana" -o jsonpath="{.items[0].metadata.name}")
#kubectl --namespace monitoring-sravan port-forward $POD_NAME 3000 2>&1 & 

# linkerd check --pre
# linkerd install --tls= | kubectl apply -f -

#Enable Images to Run with USER in the Dockerfile
#oc adm policy add-scc-to-group anyuid system:authenticated

#kubectl apply -f monitoring/grafana/config.yml
# helm install stable/grafana \
#     -f monitoring/grafana/values-os.yml \
#     --namespace monitoring \
#     --name grafana --wait


#export POD_NAME=$(kubectl get pods --namespace monitoring -l "app=grafana,release=grafana" -o jsonpath="{.items[0].metadata.name}")
#kubectl --namespace monitoring port-forward $POD_NAME 3000 2>&1 &

#echo "Password for logging into Grafana: \n"
#kubectl get secret \
    # --namespace monitoring \
    # grafana \
    # -o jsonpath="{.data.admin-password}" \
    # | base64 --decode ; echo

# curl -sL https://run.linkerd.io/emojivoto.yml   | kubectl apply -f -

# kubectl get -n emojivoto deploy -o yaml   | linkerd inject -   | kubectl apply -f -


